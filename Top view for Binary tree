class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        vector<int>ans;
        
        if(root == NULL){
            return ans;
        }
        
        map<int , int>store;
        queue<pair<Node* ,int> >q;
        q.push(make_pair(root, 0));
        
        while(!q.empty()){
            pair<Node* , int > temp = q.front();
            q.pop();
            
            Node *one= temp.first;
            int horiztl = temp.second;
            
            if(store.find(horiztl) == store.end()){
                store[horiztl] = one->data;
            }
            
            if(one->left)
               q.push(make_pair(one->left, horiztl-1));
               
            if(one->right)
               q.push(make_pair(one->right, horiztl+1));
        }
        
        for(auto i:store){
            ans.push_back(i.second);
        }
        return ans;
    }

};
