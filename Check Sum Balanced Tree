class Solution
{
    public:
    pair<bool, int> isSum (Node *root){
        if(root == NULL){
            pair<bool , int> p(true, 0);
            return p;
        }
        
        if(root->left == NULL && root->right== NULL){
             pair<bool , int> p = make_pair(true, root->data);
            return p;
        }
        
        pair<bool , int>leftt = isSum(root->left);
        pair<bool , int >rightt = isSum(root->right);
        
        bool one = leftt.first;
        bool two = rightt.first;
        bool three = root->data == leftt.second + rightt.second;
        pair<bool , int > ans;
        if(one && two && three ){
            ans.first = true;
            ans.second = 2*root->data;
        }
        else{
            ans.first = false;
        }
        
        return ans;
    }
    bool isSumTree(Node* root)
    {
        return isSum(root).first;
         // Your code here
    }
};
